SimpleTwitterPost
=================

This plugin allows your Rails application to post status updates to
the twitter service.

For example, using Twitter is a simple way to inform your Rails
application's community of activities of the members on the site, or your
application may have other interesting updates to post, such as daily
reports, or otherwise.

This plugin specializes in posting to twitter only:

A. One would like to be able to configure the twitter account to
post to depending on RAILS_ENV (development/production).

This plugin allows this through a configuration file 

  config/simple_twitter_post.yml

B. The main motivation for the plugin, are these three points:

 1. Build the message posted to twitter from user generated content
    (names, titles, other attributes)

 2. Invoke some URL shortener, if the status update relates to an object
    of your Rails App that has a URI

 3. Remove the HTTP exchanges with the URL shortening service and twitter
    from the web application request processing path.

Let's discuss these in turn.

1. This plugin allows you to write

  poster = SimpleTwitterPost::Base.new
  poster.post("Please welcome new user ':user_name'!", :user_name => user.name)

or 

  poster.post(":comment_user added a comment to :article_owner's posting :post_title. :url",
              :comment_user => user.full_name,
              :article_owner => article_owner.full_name,
              :post_title => post.title,
              :url => post.url)

This plugin detects when expanding the variables produces a message that
is too long, and shortens the substitution values so that they are at
least recognizable. For example, with this,

  poster.post(":user has tagged posting ':title' with tags ':tags'. :url",
              :user => 'Haribald Kingston',
              :title => 'Fraunhofer FIT Touch-Free: Multi Users Gesture Control Technology',
              :tags => 'technology, touch-free, gesture, prototype',
              :url => 'http://tinyurl.com/2aeqpu')

the Twitter timeline will show:

  "Haribald Kingston has tagged posting 'Fraunhofer FIT Touch-Fre..' with
  tags 'technology, touch-free, ..'. http://tinyurl.com/2aeqpu"

It takes care not to truncate the URL, if it can be avoided.

2. If a URL is given, it is passed to tinyurl.com for shortening. Chances
are the resulting URL is shorter than the original URL of the application.

3. The plugin uses Spawn so that twitter failures will not impact
the user experience of the applicaiton. This plugin is available from
http://github.com/tra/spawn


Example
=======

  p = SimpleTwitterPost::Base.new
  p.post("Welcome our new member ':user_name'. Profile is at :url", :user_name => user.name, :url => user.url)

Requirements
============

 * httpclient gem (for tinyurl)

 * grackle gem (for tinyurl)

 * spawn plugin

 * Twitter account

See POST-INSTALL file for more details.

Note
====

 * Twitter-authentication is performed through OAuth

 * There is only one :url provided for; only it will be passed throught tinyurl

 * Unit tests are included to report problems.

 * The plugin performs no remote access when RAILS_ENV=='test'

 * This is Version 0.2. Not perfect, but works mostly. 
   One might like to configure other shorteners, for example, bit.ly,

 * Pass a logger instance, for example

     SimpleTwitterPost.Base.new(:logger => Rails.logger)

   to enable logging, of both twitter status updates and error conditions.

 * Not sure whether there is a better alternative to spawn

 * The strategy chosen to ensure that message lengths are less than 140
   characters is simple, but should mostly work. Might be interesting to
   figure out some other strategy. On the other hand, it's not necessarily
   overly important.


Copyright (c) 2010 The Buckmaster Institute, Inc., released under the MIT license

Author: Stephan Wehner, stephan@buckmaster.ca
